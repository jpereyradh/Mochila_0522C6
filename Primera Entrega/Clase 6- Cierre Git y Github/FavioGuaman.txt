A. ¿Quién inventó el sistema de control de versión Git y por qué?
Git es un software de control de versiones diseñado por Linus Torvalds, pensando en la eficiencia, la confiabilidad y compatibilidad del mantenimiento de versiones de aplicaciones cuando estas tienen un gran número de archivos de código fuente. Su propósito es llevar registro de los cambios en archivos de computadora incluyendo coordinar el trabajo que varias personas realizan sobre archivos compartidos en un repositorio de código.
Al principio, Git se pensó como un motor de bajo nivel sobre el cual otros pudieran escribir la interfaz de usuario o front end como Cogito o StGIT. ​Sin embargo, Git se ha convertido desde entonces en un sistema de control de versiones con funcionalidad plena. ​Hay algunos proyectos de mucha relevancia que ya usan Git, en particular, el grupo de programación del núcleo Linux.
El mantenimiento del software Git está actualmente (2009) supervisado por Junio Hamano, quien recibe contribuciones al código de alrededor
de 280 programadores. En cuanto a derechos de autor Git es un software libre distribuible bajo los términos de la versión 2 de la Licencia Pública General de GNU.

B. ¿A quién pertenece actualmente Github y por qué?
El 1 de junio de 2018, Microsoft compró GitHub por la cantidad de 7500 millones de dólares.

C. ¿Hay otra forma que no sea la terminal para trabajar con Github?
Tenes la otra opcion de interactuar con github por la pagina web que seria el entorno grafico ademnas de la terminal.




Cheatsheet 

1. Git Clone 
            Es un comando para descargarte el codigo fuente
            desde un repositorio remoto.
  Primer uso
            git clone <http://links-con-nombre-rama>
  Uso habitual
            git clon

2. Git branch
             comando para crear una rama nueva
   Crear nueva rama
                   git branch <nombre-rama>
3. Git checkout
               comando usado para cambiarte de rama
   git checkout -d <nombre-rama>

4. Git status 
             este comando nos da toda la información necesaria sobre la rama
   git status

5. Git add
          comando usado para incluir los cambios del o de los archivos en tu siguiente commit
   Añadir solo un archivo 
                         git add <nombre-archivo>
   Añadir todo de una vez
                         git add -A
                         git add .

6. Git commit  
             se usa para guradar nuestros cambios y crear un punto de control 
             al cual podremos volver si es necesario
   git commit -m "nombre-de-commit"

7. Git push 
           se usa para mandar tus cambios al repositorio remoto 
               "origin"
   git push <nombre-remoto><nombre-rama>

8. Git pull 
           se usa para recibir actualizaciones del repositorio remoto
               "origin"
   git pull <nombre-remoto><nombre-rama>